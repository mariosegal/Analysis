 options mprint compress = yes;
 
 OPTION OBS = max ;
 

 libname FINAL "/sasmnt/u2/cfsdata/MTB/Tran_Chirag"; 
 LIBNAME OP "/sasmnt/u1/mntdata/u147349/date_info" ;
 libname JAN12 "/sasmnt/u2/cfsdata/MTB/Jan12/SASData";
 
PROC SQL ;

CREATE TABLE FINAL.RETAIL_DDA AS 
SELECT DISTINCT ACCT_ID , ACCT_MASK_ACCOUNT_KEY_1  
FROM JAN12.ACCT 
 WHERE ACCT_SBU_GROUP  EQ "CON" AND ACCT_PTYPE EQ "DDA" AND 
	SUBSTR(ACCT_STYPE,1,1) EQ "R" AND ACCT_STATUS_FOR_PRIME NE "X" AND ACCT_DATE_OPENED_FOR_PRIME <= '30SEP2010'D;   
QUIT ;



%macro Date_Attr_Loop ;

%LET LOOP_CNT = 1  ;
%do K=%eval(1) %to %eval(12);


proc datasets library = work memtype = data kill; quit; 


Proc Sql feedback;
	
 select mnth , compress(date_db),compress(database_date) into :LNAME , :stdate , :enddate from op.MONTH_Mario where sr = &K.  ;		
	
Quit ;

libname &LNAME. "/sasmnt/u2/cfsdata/MTB/&LNAME./SASData";


 PROC SQL ;
 
 CREATE TABLE RETAIL_DDA AS 
 SELECT ACCT_ID , ACCT_MASK_ACCOUNT_KEY_1 , 
	SUM (  	INPUT(ACCT_WEB_NBR_BNK2BNK_TRNS_DEB,BEST.)  , 
		INPUT(ACCT_WEB_NBR_BNK2BNK_TRNS_CRED,BEST.), 
		INPUT(ACCT_WEB_NBR_REV_BNK2BNK_TRN_DEB,BEST.) *-1 ,   
		INPUT(ACCT_WEB_NBR_REV_BNK2BNK_TRNS_CR,BEST.) *-1 
	    ) AS WEB_025PT_&LOOP_CNT , 
	SUM (	INPUT(ACCT_WEB_NBR_PMNT_MNT_ACCT,BEST.)  , 
		INPUT(ACCT_WEB_NBR_PMNT_NON_MNT,BEST.)
	   ) AS WEB_1PT_&LOOP_CNT
 
 

 FROM &LNAME..ACCT 
 WHERE ACCT_MASK_ACCOUNT_KEY_1 IN ( SELECT ACCT_MASK_ACCOUNT_KEY_1 FROM FINAL.RETAIL_DDA);   
 QUIT ;

 
 
 
 PROC SQL ;

CREATE TABLE TRAN AS 
SELECT 	TRANS_ID , TRANS_MASK_ACCOUNT_KEY_1,  
	SUM 	( 	TR_NBR_LOBBY_DEP_PMT_NO_CSH_BK+  TR_NBR_DRV_IN_DEP_PMT_NO_CSH_BK + 
			TRANS_NBR_LOBBY_SVG_WITHDRAWLS + TRANS_NBR_DRV_IN_SVG_WITHDRAWALS +
			TRANS_NBR_LOBBY_LOC_CASH_ADV + TR_NBR_NIGHT_DEP_PMT_NO_CSH_BK 
		) as BR_1PT_&LOOP_CNT  ,
				
	SUM 	( 	TR_NBR_LOBBY_DEP_PMT_WITH_CSH_BK + TR_NBR_DRVIN_DEP_PMT_WITH_CSH_BK + TR_NBR_NIGHT_DEP_PMT_WITH_CSH_BK) as BR_15PT_&LOOP_CNT  ,
	SUM 	( 	TRANS_NBR_VRU_INQUIRIES + TRANS_NBR_VRU_TRANSFER_FROM + TRANS_NBR_VRU_TRANSFER_TO +
			TRANS_NBR_CSW_INQUIRIES + TRANS_NBR_CSW_TRANSFER_FROM + TRANS_NBR_CSW_TRANSFER_TO
		) as VRU_&LOOP_CNT  
FROM &LNAME..TRAN
WHERE TRANS_MASK_ACCOUNT_KEY_1 IN ( SELECT ACCT_MASK_ACCOUNT_KEY_1 FROM FINAL.RETAIL_DDA ) 
GROUP BY TRANS_ID , TRANS_MASK_ACCOUNT_KEY_1 ;

QUIT ;




PROC SQL ;

CREATE TABLE DDA_WEB AS 
SELECT * FROM &LNAME..ACAC 
WHERE  Masked_Related IN ( SELECT ACCT_MASK_ACCOUNT_KEY_1 FROM FINAL.RETAIL_DDA )  ;

QUIT ;


PROC SQL ;

CREATE TABLE WEB_TEMP AS 
SELECT ACCT_ID , ACCT_MASK_ACCOUNT_KEY_1 
FROM &LNAME..ACCT 
WHERE ACCT_MASK_ACCOUNT_KEY_1 IN ( SELECT ACAC_MASK_ACCOUNT_KEY_1 FROM DDA_WEB ) 
       AND ACCT_PTYPE = "WEB" AND ACCT_STYPE = "WEB" AND INPUT(ACCT_WEB_NBR_SIGN_ONS,BEST.) >= 1 	
;

QUIT ;

PROC SQL ;

CREATE TABLE WEB_FLAG AS 
SELECT Distinct Masked_Related , 1 AS WEB_FLAG_&LOOP_CNT  FROM DDA_WEB 
WHERE ACAC_MASK_ACCOUNT_KEY_1 IN ( SELECT ACCT_MASK_ACCOUNT_KEY_1 FROM WEB_TEMP ) ;


QUIT ;



PROC SQL ;

CREATE TABLE DDA_WEB_MOBILE AS 
SELECT A.* , B.* FROM  DDA_WEB AS A , &LNAME..MOBILE AS B 
WHERE A.ACAC_MASK_ACCOUNT_KEY_1  = B.MOBILE_ACCT_MASK_ACCOUNT_KEY_1  ;

QUIT ;


PROC SQL ;

CREATE TABLE MOBILE AS 
SELECT ACAC_ID , Masked_Related , 

	SUM	(		MOBILE_TOTAL_BAL_REQ_SMS + MOBILE_TOTAL_BAL_REQ_WAP + MOBILE_TOTA_BAL_REQ_IPHONE+
				MOBILE_TOTAL_HIST_REQ_SMS + MOBILE_TOTAL_HIST_REQ_WAP + MOBILE_TOTAL_HIST_REQ_SMART + 
				MOBILE_TOTAL_VIEW_TRANS_REQ_WAP + MOBILE_TOT_VIEW_TRANS_REQ_IPHONE + 
				MOBILE_TOTAL_TRANS_REQ_WAP + MOBILE_TOTAL_TRANS_REQ_IPHONE +
				MOBILE_TOTAL_SCH_TRANS_REQ_WAP + MOBILE_TOT_SCH_TRANS_REQ_IPHONE  + 
				MOBILE_TOTAL_CAN_TRANS_REQ_WAP + MOBILE_TOT_CAN_TRANS_REQ_IPHONE
		) AS MOBILE_025PT_&LOOP_CNT   , 
	SUM	(MOBILE_TOTAL_SCH_BPAY_REQ_WI + MOBILE_TOTAL_CAN_BPAY_REQ_WI) AS MOBILE_1PT_&LOOP_CNT  
		
FROM DDA_WEB_MOBILE 	
GROUP BY ACAC_ID , Masked_Related  ;

QUIT ;	




PROC SQL ;
CREATE TABLE ATM_DEB  AS 
SELECT 	ACCT_MASK_ACCOUNT_KEY_1 , ACCT_ID , ACCT_PTYPE , ACCT_STYPE , ACCT_SBU_GROUP ,
	ACCT_MASK_LINKED_KEY_1 ,ACCT_MASK_LINKED_KEY_2,ACCT_MASK_LINKED_KEY_3,
	ACCT_MASK_LINKED_KEY_4,ACCT_MASK_LINKED_KEY_5,ACCT_MASK_LINKED_KEY_6

FROM &LNAME..ACCT  
WHERE ACCT_PTYPE IN ("ATM" , "DEB") ;

QUIT ; 




PROC SQL ;

CREATE TABLE DDA_DEB AS 
SELECT ACCT_ID ,acct_mask_account_key_1 , acct_mask_linked_key_1 FROM ATM_DEB 
WHERE acct_mask_linked_key_1 IN ( SELECT acct_mask_account_key_1 FROM FINAL.RETAIL_DDA ) 
UNION ALL 

SELECT ACCT_ID ,acct_mask_account_key_1 , acct_mask_linked_key_2 FROM ATM_DEB 
WHERE acct_mask_linked_key_2 IN ( SELECT acct_mask_account_key_1 FROM FINAL.RETAIL_DDA ) 

UNION ALL 

SELECT ACCT_ID ,acct_mask_account_key_1 , acct_mask_linked_key_3 FROM ATM_DEB 
WHERE acct_mask_linked_key_3 IN ( SELECT acct_mask_account_key_1 FROM FINAL.RETAIL_DDA ) 

UNION ALL 

SELECT ACCT_ID ,acct_mask_account_key_1 , acct_mask_linked_key_4 FROM ATM_DEB 
WHERE acct_mask_linked_key_4 IN ( SELECT acct_mask_account_key_1 FROM FINAL.RETAIL_DDA ) 

UNION ALL 

SELECT ACCT_ID ,acct_mask_account_key_1 , acct_mask_linked_key_5 FROM ATM_DEB 
WHERE acct_mask_linked_key_5 IN ( SELECT acct_mask_account_key_1 FROM FINAL.RETAIL_DDA ) 

UNION ALL 

SELECT ACCT_ID ,acct_mask_account_key_1 , acct_mask_linked_key_6 FROM ATM_DEB 
WHERE acct_mask_linked_key_6 IN ( SELECT acct_mask_account_key_1 FROM FINAL.RETAIL_DDA ) ;


QUIT ;


PROC SORT DATA = DDA_DEB OUT = DDA_DEB_UNIQUE NODUPKEY ; 
BY ACCT_ID acct_mask_account_key_1 acct_mask_linked_key_1 ;
RUN ;

PROC SQL ;

CREATE TABLE DEB_ACCT AS 

SELECT CT_ID, CARD_MASK_ACCOUNT_KEY_1 , 
SUM( CASE 	WHEN CT_TRANSACTION_CHANNEL_NO_WSID  IN ( "ATMO" , "ATMT" ) AND CT_TRANSACTION_TYPE IN ( "WDRAL" , "DEPOS" ) 
	THEN CT_NUMBER_OF_TRANSACTIONS 
	ELSE 0 
END  ) AS ATM_1PT_&LOOP_CNT. , 

SUM( CASE 	WHEN CT_TRANSACTION_CHANNEL_NO_WSID  IN ( "ATMO" , "ATMT" ) AND CT_TRANSACTION_TYPE IN ( "INQRY" , "TRNSF" ) 
	THEN CT_NUMBER_OF_TRANSACTIONS 
	ELSE 0 
END  ) AS ATM_025PT_&LOOP_CNT. , 

SUM( CASE 	WHEN CT_TRANSACTION_CHANNEL_NO_WSID  IN ( "ATMO"  ) AND CT_TRANSACTION_TYPE IN ("CSHCK" ) 
	THEN CT_NUMBER_OF_TRANSACTIONS 
	ELSE 0 
END  ) AS ATM_15PT_&LOOP_CNT. 



FROM &LNAME..CARD 
WHERE         CARD_MASK_ACCOUNT_KEY_1 IN ( SELECT acct_mask_account_key_1 FROM DDA_DEB_UNIQUE ) 
GROUP BY  CT_ID, CARD_MASK_ACCOUNT_KEY_1 ;

QUIT ;


PROC SQL ;

CREATE TABLE CT_1 AS 
SELECT A.* , B.ATM_1PT_&LOOP_CNT. , B.ATM_025PT_&LOOP_CNT. , B.ATM_15PT_&LOOP_CNT. 
FROM DDA_DEB_UNIQUE AS A ,  DEB_ACCT AS B 
WHERE A.ACCT_MASK_ACCOUNT_KEY_1 = B.CARD_MASK_ACCOUNT_KEY_1  AND 
	A.ACCT_ID = B.CT_ID;

QUIT ;

PROC SQL ;

CREATE TABLE CT AS 
SELECT ACCT_MASK_LINKED_KEY_1 , sum(ATM_1PT_&LOOP_CNT.) as  ATM_1PT_&LOOP_CNT., 
	sum(ATM_025PT_&LOOP_CNT.) as ATM_025PT_&LOOP_CNT. , sum(ATM_15PT_&LOOP_CNT.) as ATM_15PT_&LOOP_CNT.  
FROM CT_1
group by ACCT_MASK_LINKED_KEY_1 ;

QUIT ;


 PROC SQL ;

CREATE TABLE FINAL.RETAIL_DDA AS 
SELECT A.* , 	B.WEB_025PT_&LOOP_CNT. , B.WEB_1PT_&LOOP_CNT. ,
		C.BR_1PT_&LOOP_CNT. , C.BR_15PT_&LOOP_CNT ,C.VRU_&LOOP_CNT. ,
		D.MOBILE_025PT_&LOOP_CNT. , D.MOBILE_1PT_&LOOP_CNT. , 
		E.ATM_1PT_&LOOP_CNT. , E.ATM_025PT_&LOOP_CNT. , E.ATM_15PT_&LOOP_CNT. , F.WEB_FLAG_&LOOP_CNT 
FROM FINAL.RETAIL_DDA AS A LEFT JOIN RETAIL_DDA AS B ON A.ACCT_MASK_ACCOUNT_KEY_1 = B.ACCT_MASK_ACCOUNT_KEY_1 
			   LEFT JOIN TRAN AS C ON A.ACCT_MASK_ACCOUNT_KEY_1  = C.TRANS_MASK_ACCOUNT_KEY_1 
			   LEFT JOIN MOBILE AS D ON A.ACCT_MASK_ACCOUNT_KEY_1  = D.Masked_Related 
			   LEFT JOIN CT AS E ON A.ACCT_MASK_ACCOUNT_KEY_1  = E.ACCT_MASK_LINKED_KEY_1
			   LEFT JOIN WEB_FLAG AS F ON A.ACCT_MASK_ACCOUNT_KEY_1  = F.Masked_Related  
			   
			   ;	
QUIT ; 

 
 %LET LOOP_CNT = %EVAL(&LOOP_CNT. + 1)  ; 
 
 %END;


%mend Date_Attr_Loop;


%Date_Attr_Loop;


DATA RETAIL_DDA ; 
SET FINAL.RETAIL_DDA ;
ARRAY NUMS _NUMERIC_;
DO OVER NUMS;
	IF NUMS=. THEN NUMS=0;
END;

RUN;



DATA RETAIL_DDA ( keep = ACCT_ID ACCT_MASK_ACCOUNT_KEY_1 BR_1  BR_15 PHONE MOBILE_025 MOBILE_1  WEB_025 WEB_1 WEB ATM_025 ATM_1 ATM_15 ); 
SET  RETAIL_DDA ;
BR_1 = SUM( OF BR_1PT_1 - BR_1PT_12) ;

BR_15= SUM(OF BR_15PT_1 - BR_15PT_12) ; 

PHONE =	SUM(OF VRU_1 - VRU_12)  ;

MOBILE_025 =	SUM(OF MOBILE_025PT_1 - MOBILE_025PT_12) ;

MOBILE_1 =	SUM(OF MOBILE_1PT_1 - MOBILE_1PT_12) ;

WEB_025	=SUM(OF WEB_025PT_1 - WEB_025PT_12) ; 

WEB_1	=SUM(OF WEB_1PT_1 - WEB_1PT_12) ; 
WEB	=SUM(OF WEB_FLAG_1 - WEB_FLAG_12) ; 
ATM_025	=SUM(OF ATM_025PT_1 - ATM_025PT_12) ;
ATM_1	=SUM(OF ATM_1PT_1 - ATM_1PT_12) ; 
ATM_15	=SUM(OF ATM_15PT_1 - ATM_15PT_12) ; 
RUN ;	


PROC SQL ;

CREATE TABLE RETAIL_DDA_HHLD AS 
SELECT ACCT_ID , SUM(BR_1) AS BR_1,  SUM(BR_15) AS BR_15,
		SUM(PHONE) AS PHONE, SUM(MOBILE_025) AS MOBILE_025, SUM(MOBILE_1) AS MOBILE_1,
		SUM(WEB_025) AS WEB_025, SUM(WEB_1) AS WEB_1 ,SUM(WEB) AS WEB, 
		SUM(ATM_025) AS ATM_025,SUM(ATM_1) AS ATM_1 , SUM(ATM_15) AS ATM_15 
FROM 	RETAIL_DDA 
GROUP ACCT_ID ;
QUIT ;



/*ASSIGN POINT AND CLASSIFY INTO GROUPS*/
DATA FINAL.HHLD_POINTS ;
LENGTH SEGMENT $ 20;
SET RETAIL_DDA_HHLD ;

BRANCH = SUM(BR_1, BR_15*1.5);
PHONE = DIVIDE(PHONE,4);
ONLINE= SUM(DIVIDE(MOBILE_025,4),MOBILE_1,WEB_1,DIVIDE(WEB_025,4),WEB);
ATM = SUM(DIVIDE(ATM_025,4),ATM_1,ATM_15*1.5);
TOTAL = SUM(ATM , ONLINE , PHONE , BRANCH);
BR_PCT = DIVIDE(BRANCH,TOTAL);
PH_PCT = DIVIDE(PHONE,TOTAL);
ONL_PCT = DIVIDE(ONLINE,TOTAL);
ATM_PCT = DIVIDE(ATM,TOTAL);

IF BR_PCT EQ . THEN BR_PCT = 0;
IF PH_PCT EQ . THEN PH_PCT = 0;
IF ONL_PCT EQ . THEN ONL_PCT = 0;
IF ATM_PCT EQ . THEN ATM_PCT = 0;

ACTIVE = 0;
IF (SUM(BRANCH,ATM) GT 6 OR SUM(ONLINE,PHONE) GT 12) THEN ACTIVE = 1;
SEGMENT = 'NONE';

IF MAX(BR_PCT,PH_PCT,ONL_PCT,ATM_PCT) GT 0.8 THEN DO; /*WE HAVE A DOMINANT ONE*/
	IF ( SUM(ONLINE,PHONE) LT 24 AND ATM LT 12 AND BR_PCT GT 0.8) THEN SEGMENT = 'BRANCH DOMINANT';
	IF ( SUM(ONLINE,PHONE) LT 24 AND BRANCH LT 12 AND ATM_PCT GT 0.8) THEN SEGMENT = 'ATM DOMINANT';
	IF ( ONLINE LT 24 AND SUM(BRANCH,ATM) LT 12 AND PH_PCT GT 0.8) THEN SEGMENT = 'PHONE DOMINANT';
	IF ( PHONE LT 24 AND SUM(BRANCH,ATM) LT 12 AND ONL_PCT GT 0.8) THEN SEGMENT = 'ONLINE DOMINANT';
END;

IF ACTIVE=1 AND SEGMENT = 'NONE' THEN DO; /*ASSIGN THE TYPES FOR MULTI CHANNEL*/
	IF BRANCH LT 6 THEN SEGMENT = 'MULTI - LOW BRANCH';
	IF BRANCH GT 24 THEN SEGMENT = 'MULTI - HIGH BRANCH';
	IF BRANCH GE 6 AND BRANCH LE 24 THEN SEGMENT='MULTI - MED BRANCH';
END;

IF ACTIVE EQ 0 THEN SEGMENT = 'INACTIVE';

FORMAT PH_PCT BR_PCT ONL_PCT ATM_PCT PERCENT8.1;
KEEP ACCT_ID BRANCH PHONE ONLINE ATM TOTAL BR_PCT PH_PCT ONL_PCT ATM_PCT SEGMENT ACTIVE BR_1  BR_15 PHONE MOBILE_025 MOBILE_1  WEB_025 WEB_1 WEB ATM_025 ATM_1 ATM_15 ;
RUN;


